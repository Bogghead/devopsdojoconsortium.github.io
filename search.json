[

 {
  "title": "Blog",
  "url": "/blog.html",
  "content": "Latest Posts        Demo    Example blog post intro    "
 },
 {
  "title": "Coming soon",
  "url": "/docs/playbooks/coming-soon.html",
  "content": "Coming soonOh yeah, were working on it!"
 },
 {
  "title": "References",
  "url": "/docs/references/index.html",
  "content": "ReferencesUseful Reference Material"
 },
 {
  "title": "Sharing",
  "url": "/docs/playbooks/sharing/index.html",
  "content": "SharingThis is WIP"
 },
 {
  "title": "Culture",
  "url": "/docs/playbooks/culture/index.html",
  "content": "Culture  Culture Charter to help team adopt the culture of DevOps  Change Champion NetworkThis is WIP"
 },
 {
  "title": "Lean Process",
  "url": "/docs/playbooks/lean/index.html",
  "content": "Lean ProcessThe DevOps L in CALMS is for Lean. Without utilizing Lean principles and process for software delivery, DevOps is lost.The Dojo experience is all about reinforcing Lean principles and practices into the team DNA to enable programs success.The Value Stream  Value Stream Team Orientation  Value Stream Mapping WorkshopApplying Lean Principles  The 7 Lean Principles  The 7 Wastes in Software Development  Cost of DelayHistory of Lean  Deming  Popendiek"
 },
 {
  "title": "Metrics",
  "url": "/docs/playbooks/metrics/index.html",
  "content": "MetricsThe right metrics used the right way in the right combination are key to improvement.This is WIP"
 },
 {
  "title": "Automation",
  "url": "/docs/playbooks/automation/index.html",
  "content": "AutomationThis is WIP"
 },
 {
  "title": "Agile",
  "url": "/docs/playbooks/agile/index.html",
  "content": "Agile  Agile values and principles  Methodologies  Story Slicing Techniques"
 },
 {
  "title": "Product",
  "url": "/docs/playbooks/product/index.html",
  "content": "Product  Developing a product strategy  Defining business outcomes"
 },
 {
  "title": "Dojo Playbooks",
  "url": "/docs/playbooks/index.html",
  "content": "Dojo PlaybooksThe enclosed playbooks are contributed by multiple Consortium members and reflect the practices of those individual Dojos. They are all wrong in some way, but are the best practices we know currently.Playbooks are focused documents that can be used as a reference by teams wanting to improve how they perform an activity or those helping to coach teams. Each playbook is focused on a single pain point or practice.Recommended PracticesA playbook should follow the following structure:  Definition of what the playbook is trying to accomplish.  A label of the target audience  Recommended, actionable practices that have been found effective.  Tips and tricks that have been found useful in the past.TipsKeep the playbook short enough that it can be consumed quickly. Think 5 minute read, not a novella. Slice if required."
 },
 {
  "title": "Dojo Material",
  "url": "/docs/index.html",
  "content": "Dojo MaterialEnclosed is material used by several Dojos for either direct training or indirect knowledge transfer for their organizations.  Playbooks: Coaching material and suggested practices.  References: Reference material, books, and videos we refer others to."
 },
 {
  "title": "About the DevOps Dojo Consortium",
  "url": "/overview/index.html",
  "content": "We are collaboration a of enterprise Dojos all seeking to improve both the outcomes of their companies and thequality of life of product teams.DevOps is often used to mean different things and many people new to DevOps instantly focus on what tools to buy. You cannot buyDevOps and tools represent a small portion of the solution. In our context, these are our guiding principles for DevOpsDevOps should be defined by the outcomes. It is those sets of cultural norms andtechnology practices that enable the fast flow of planned work from, among otherthings, development through tests into operations, while preserving world classreliability, operation, and security. DevOps is not about what you do, but whatyour outcomes are. So many things that we associate with DevOps, such ascommunication and culture, fit underneath this very broad umbrella of beliefsand practices.-- Gene Kim, 2014Each of the Dojos operate in their particular contexts with individualized implementation, but the overall goal is improving thecontinuous flow of value to the end user with people collaborating with lean processes and heavy automation."
 },
 {
  "title": "About the DevOps Dojo Consortium",
  "url": "/index.html",
  "content": "We are a collaboration of enterprise Dojos all seeking to improve both the outcomes of their companies and thequality of life of product teams.DevOps is often used to mean different things and people new to DevOps often focus on tooling. You cannot buy DevOps and tools represent a small portion of the solution. In our context, this is guiding principle for DevOpsDevOps should be defined by the outcomes. It is those sets of cultural norms andtechnology practices that enable the fast flow of planned work from, among otherthings, development through tests into operations, while preserving world classreliability, operation, and security. DevOps is not about what you do, but whatyour outcomes are. So many things that we associate with DevOps, such ascommunication and culture, fit underneath this very broad umbrella of beliefsand practices.-- Gen Kim, 2014Each of the Dojos operate in their particular contexts with individualized implementation, but the overall goal is improving thecontinuous flow of value to the end user with people collaborating with lean processes and heavy automation."
 },

 {
  "title": "Training",
  "url": "/training.html",
  "content": "# {{ page.title }}&gt; Check out the [slides](./training/dojo-overview.html)"
 },
 {
  "title": "Value Stream Orientation",
  "url": "/docs/playbooks/lean/value-stream-orientation.html",
  "content": "# {{ page.title }}## IntroductionOne of the most important coaching goals in a Dojo challenge is to inspire the team to understand the system view, specifically how value flows from ideation all the way to deployment and support. It isn&#39;t the &quot;First Way&quot; of DevOps for nothing. However, the question we often get sounds something like:&gt; Is it really necessary to train everyone regarding the overall system? Our developers need to be heads down and let the architects, RTE&#39;s, and other Program leaders manage the big picture.Of course as you read that question you can easily detect it resembles a defense of a well established management paradigm. Broaching this subject in your Dojo will require a healthy combination of some of these organizational attributes:* Understanding that DevOps is more than just pipeline tooling skills.* Sufficient framing and preparation with managers that the team will be empowered toward autonomy while entrusted to the Dojo.* Trust that the Dojo coaches are working toward the good of all, not just the team members.* Openness that despite how teams are currently aligned, that teams can contribute realignment insights to improve feature lead times. * A catching on of the fact that software architecture is a skill vs being a role.Even heavily matrixed organizations mired in a negative cycle of pointing people&#39;s attention back toward their siloed constraints are coming around to the realization that they must at least make the Value Stream visible in some way. We beleive the Dojo can demonstrate value to both the team and the programs they serve by establishing a Value Stream orientation in the early stages of the engagement. We map the value stream early on. We call out dependencies. We reduce handoffs where empowered. We report on the waste in handoffs where not empowered. In all this, we see time and time again that Value Stream orientation in the Dojo creates retained value for the team and creates viral value for other programs in the organization watching all this transpire. "
 },
 {
  "title": "Value Stream Mapping Workshop",
  "url": "/docs/playbooks/lean/wm-vsm.html",
  "content": "# {{ page.title }}The purpose of Value Stream Mapping Workshop is to understand all of the steps needed todeliver value from conception to production. We can then use it as a tool toidentify constraints and propose improvements to the value stream.## Recommended Practices1. Everyone who has a touch point in the value stream should be present for the   exercise. This includes, but is not limited to, the developers, the   engineering manager, the product owner, and representatives from any external   teams that have required steps between idea and production.2. Start with an introduction to what value stream mapping is, and why it is important.### Explain the terms associated with value stream mapping- Build Cycle Time: Total duration of the build, from commit to deploy.- Development Cycle Time: The time from when work begins until it is deployed to production. Done.- Lead Time: The time taken from start to end of the value stream.- Process Time / Value Add Time: The time spent executing a particular process.- Wait Time / Non-value Time: The time between processes where no activity is occurring.- Percent Complete and Accurate: The percentage of work from a process that is   rejected by the next process. If coding fails code review 20% of the time,   it&#39;s %C/A is 80%.### Identify source of request*Example:* Refine EpicFor each source of _Requests_  1. What is the outcome of that step, or next step?  2. Who is involved in that step?  3. How long does this step take?  4. How long between the previous and current steps?### Identify Rework Loops for each step1. To which steps do we return to from this one for corrections?2. How often is work rejected from this step (percentage complete and accurate)?### Identify value added time, cycle time, and lead time1. What is the total value time (time spent doing work) from conception to production?2. What is the total non-value time (time waiting) from conception to production?## Outcomes- Visual representation of the value stream(s) of the team.- Identify possible constraints to flow based on value added time, cycle time, and lead time.## Sample Workshop AgendaThe below sample is for a 3 day workshop that focuses more on the flow of work and less on the numbers.  If you would like to go into more of the metrics extending the workshop to 5 days would allow for that.#### Day 1- Workshop working agreements- Review of workshop charter- Create/interate through current state value stream map#### Day 2- Refine Value Stream Map and add data points- Identify waste and oppotunities to improve the flow of work- Start future sate value stream map#### Day 3- Complete future state value stream map- Document/prioritize Kiazen improvement opportunities## Tips- Involve all team members associated to any part of the process of getting value from conception to production.- Review and maintain value stream map to show wins associated to implementing improvement.- Take into account all potential flows for team processes, and value stream those as well.## ValueAs a team, we want to understand how to value stream map our team processes, so that we may understand bottlenecks associated to delivering value, and identify areas of improvement.## Acceptance Criteria- Value stream all things associated to delivering value.- Create action items of improvement from exercise.## References- [Value Stream Mapping Guide](https://creately.com/blog/diagrams/value-stream-mapping-guide/)- [Value Stream Mapping: How to Visualize Work and Align Leadership for Organizational Transformation](https://learning.oreilly.com/library/view/value-stream-mapping/9780071828918/)"
 },

{
  "title": "Demo",
  "url": "/blog/2019-08-03-demo.html",
  "date": "2019-08-03 00:00:00 +0000",
  "content": "Example blog post introThe rest of the blog post after the first para"
 },
 {
  "title": "",
  "url": "",
  "date": "",
  "content": ""
 }
]